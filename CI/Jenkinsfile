pipeline {
    agent any

    environment {
        DUMP_LOCATION = '/tmp'
        DOCKER_IMAGE_PREFIX = 'anaikdocker/py'
        DOCKER_TMP_PREFIX = 'anaikdocker'
        DOCKER_HUB_CREDS = credentials('DOCKER_HUB')
    }

    stages {
        stage('CHECKOUT') {
            checkout scm
        }

        stage('LINT') {
            steps {
                echo 'Linting'
                sh '''
                python3 -m pylint src/app.py
                '''
            }
        }

        stage('BUILD') {
            steps {
                echo 'bulding'
                sh '''
                docker info --format '{{json .ServerVersion}}'
                cd src
                docker build -t ${DOCKER_IMAGE_PREFIX}:${BUILD_NUMBER} .
                '''
            }
        }

        stage('TEST') {
            steps {
                echo 'testing'
                sh '''
                docker info --format '{{json .ServerVersion}}'
                DOCKERCONTAINER=$(docker run --name ${DOCKER_TMP_PREFIX}_${BUILD_NUMBER} -d -e DUMP_LOCATION=${DUMP_LOCATION} -P ${DOCKER_IMAGE_PREFIX}:${BUILD_NUMBER})
                local_port=$(docker inspect --format='{{range $p, $conf := .NetworkSettings.Ports}}{{(index $conf 0).HostPort}}{{end}}' ${DOCKERCONTAINER})
                sleep 3
                curl 0:${local_port}
                curl 0:${local_port}/healthz
                docker kill ${DOCKER_TMP_PREFIX}_${BUILD_NUMBER} && docker rm ${DOCKER_TMP_PREFIX}_${BUILD_NUMBER}
                '''
            }
        }

        stage('PUSH') {
            steps {
                echo 'pushing'
                sh '''
                EPOCH=$(date +%s)
                docker info
                docker login -u ${DOCKER_HUB_CREDS_USR} -p ${DOCKER_HUB_CREDS_PSW}
                docker push ${DOCKER_IMAGE_PREFIX}:${BUILD_NUMBER}
                '''
            }
        }
    }
}